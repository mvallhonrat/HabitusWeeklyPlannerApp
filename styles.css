/* Drag and Drop Styles */
.task-item {
    touch-action: none;
    user-select: none;
    transition: transform 0.2s ease, opacity 0.2s ease;
    -webkit-tap-highlight-color: transparent;
}

.task-item:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.task-item.dragging {
    opacity: 0.5;
    transform: scale(0.95);
}

.drag-handle {
    cursor: grab;
    user-select: none;
    color: #6B7280;
    transition: opacity 0.2s ease, color 0.2s ease;
}

.drag-handle:hover {
    color: #374151;
}

.dark .drag-handle {
    color: #9CA3AF;
}

.dark .drag-handle:hover {
    color: #D1D5DB;
}

.task-item.dragging .drag-handle {
    cursor: grabbing;
}

.role-badge, .quadrant-badge {
    transition: all 0.2s ease;
    cursor: pointer;
}

.role-badge:hover, .quadrant-badge:hover {
    transform: scale(1.05);
}

/* Drop target styles */
.role-badge.drag-over {
    background-color: rgba(59, 130, 246, 0.2) !important;
    transform: scale(1.1);
}

.quadrant-badge.drag-over {
    transform: scale(1.1);
    box-shadow: 0 0 0 2px currentColor;
}

/* Dark mode adjustments */
.dark .role-badge.drag-over {
    background-color: rgba(59, 130, 246, 0.3) !important;
}

/* Animation for task movement */
@keyframes taskMove {
    0% { transform: scale(1); }
    50% { transform: scale(1.02); }
    100% { transform: scale(1); }
}

.task-item.moving {
    animation: taskMove 0.3s ease;
}

/* Prevent text selection during drag */
.dragging * {
    user-select: none;
}

/* Improve touch interaction */
@media (hover: none) {
    .drag-handle {
        opacity: 1 !important;
        padding: 12px; /* Larger touch target for drag handle */
    }
    
    .task-item:active {
        transform: scale(0.98);
    }

    /* Prevent accidental scrolling while dragging */
    .task-item.dragging {
        touch-action: none;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        user-select: none;
    }

    /* Improve touch feedback */
    .task-item {
        touch-action: pan-y pinch-zoom; /* Allow vertical scrolling when not dragging */
    }

    .task-item.dragging {
        touch-action: none; /* Disable all touch actions while dragging */
    }
}

/* Drag and drop styles */
.task-ghost {
    background: white;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    border-radius: 0.375rem;
    pointer-events: none;
}

.task-list {
    transition: background-color 0.2s ease;
    min-height: 2rem;
}

.task-list.drag-over {
    background-color: rgba(59, 130, 246, 0.1);
    border: 2px dashed #3b82f6;
}

/* Prevent scrolling while dragging */
body.dragging-active {
    overflow: hidden;
    touch-action: none;
    position: fixed;
    width: 100%;
    height: 100%;
}

/* Improve touch targets on mobile */
@media (max-width: 640px) {
    .task-item {
        padding: 0.75rem;
        margin-bottom: 0.5rem;
        position: relative; /* For better touch handling */
    }
    
    .task-list {
        padding: 0.5rem;
        touch-action: pan-y; /* Allow vertical scrolling in lists */
    }
    
    /* Optimize checkbox size and touch target */
    .task-item input[type="checkbox"] {
        width: 20px;
        height: 20px;
        min-width: 20px;
        min-height: 20px;
        margin-right: 8px;
        cursor: pointer;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border: 2px solid #6B7280;
        border-radius: 4px;
        background-color: white;
        position: relative;
        transition: all 0.2s ease;
    }

    .task-item input[type="checkbox"]:checked {
        background-color: #4F46E5;
        border-color: #4F46E5;
    }

    .task-item input[type="checkbox"]:checked::after {
        content: '';
        position: absolute;
        left: 6px;
        top: 2px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
    }

    /* Increase touch target for buttons while keeping visual size */
    .task-item button {
        min-width: 32px;
        min-height: 32px;
        padding: 6px;
        position: relative;
    }

    .task-item button::after {
        content: '';
        position: absolute;
        top: -8px;
        left: -8px;
        right: -8px;
        bottom: -8px;
    }
} 